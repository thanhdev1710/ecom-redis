version: "3.9"

services:
  redis:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - ./data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: ["redis-stack-server", "/usr/local/etc/redis/redis.conf"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", 'redis-cli -a "$REDIS_PASSWORD" PING || exit 1']
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  seed:
    build: ./seed
    image: chithanh171004/redis-seed:latest
    container_name: redis-seed
    env_file: [.env]
    environment:
      - REDIS_URL=${REDIS_URL}
    depends_on:
      redis:
        condition: service_healthy
    restart: "no"

  api:
    build: ./api
    image: chithanh171004/ecom-api:latest
    container_name: ecom-api
    env_file: [.env]
    environment:
      - REDIS_URL=${REDIS_URL}
      - PORT=${PORT_API}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      seed:
        condition: service_completed_successfully
    ports:
      - "4000:4000"
    restart: unless-stopped

  chatbot:
    build: ./Chatbot_shopping
    image: chithanh171004/ecom-chatbot:latest
    container_name: ecom-chatbot
    env_file: [.env]
    environment:
      - REDIS_URL=${REDIS_URL}
      - PORT=${CHATBOT_API}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      seed:
        condition: service_completed_successfully
    ports:
      - "4001:4001"
    restart: unless-stopped

  web:
    build: ./web
    image: chithanh171004/ecom-web:latest
    container_name: ecom-web
    env_file: [.env]
    environment:
      # Override lại URL nội bộ
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - PORT=${PORT_WEB}
    depends_on:
      api:
        condition: service_started
    ports:
      - "3000:3000"
    restart: unless-stopped
